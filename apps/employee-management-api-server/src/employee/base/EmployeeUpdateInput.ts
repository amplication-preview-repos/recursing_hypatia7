/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { PresenceUpdateManyWithoutEmployeesInput } from "./PresenceUpdateManyWithoutEmployeesInput";
import { Type } from "class-transformer";
import { TransferUpdateManyWithoutEmployeesInput } from "./TransferUpdateManyWithoutEmployeesInput";
import { HolidayUpdateManyWithoutEmployeesInput } from "./HolidayUpdateManyWithoutEmployeesInput";
import { PermissionUpdateManyWithoutEmployeesInput } from "./PermissionUpdateManyWithoutEmployeesInput";
import { DiseaseCertificateUpdateManyWithoutEmployeesInput } from "./DiseaseCertificateUpdateManyWithoutEmployeesInput";

@InputType()
class EmployeeUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => PresenceUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => PresenceUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => PresenceUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  presences?: PresenceUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: () => TransferUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => TransferUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => TransferUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  transfers?: TransferUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: () => HolidayUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => HolidayUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => HolidayUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  holidays?: HolidayUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: () => PermissionUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => PermissionUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => PermissionUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  permissions?: PermissionUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: () => DiseaseCertificateUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => DiseaseCertificateUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => DiseaseCertificateUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  diseaseCertificates?: DiseaseCertificateUpdateManyWithoutEmployeesInput;
}

export { EmployeeUpdateInput as EmployeeUpdateInput };
