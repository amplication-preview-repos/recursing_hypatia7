/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { PresenceListRelationFilter } from "../../presence/base/PresenceListRelationFilter";
import { TransferListRelationFilter } from "../../transfer/base/TransferListRelationFilter";
import { HolidayListRelationFilter } from "../../holiday/base/HolidayListRelationFilter";
import { PermissionListRelationFilter } from "../../permission/base/PermissionListRelationFilter";
import { DiseaseCertificateListRelationFilter } from "../../diseaseCertificate/base/DiseaseCertificateListRelationFilter";

@InputType()
class EmployeeWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  phoneNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => PresenceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PresenceListRelationFilter)
  @IsOptional()
  @Field(() => PresenceListRelationFilter, {
    nullable: true,
  })
  presences?: PresenceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TransferListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TransferListRelationFilter)
  @IsOptional()
  @Field(() => TransferListRelationFilter, {
    nullable: true,
  })
  transfers?: TransferListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => HolidayListRelationFilter,
  })
  @ValidateNested()
  @Type(() => HolidayListRelationFilter)
  @IsOptional()
  @Field(() => HolidayListRelationFilter, {
    nullable: true,
  })
  holidays?: HolidayListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PermissionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PermissionListRelationFilter)
  @IsOptional()
  @Field(() => PermissionListRelationFilter, {
    nullable: true,
  })
  permissions?: PermissionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => DiseaseCertificateListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DiseaseCertificateListRelationFilter)
  @IsOptional()
  @Field(() => DiseaseCertificateListRelationFilter, {
    nullable: true,
  })
  diseaseCertificates?: DiseaseCertificateListRelationFilter;
}

export { EmployeeWhereInput as EmployeeWhereInput };
