/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  DiseaseCertificate as PrismaDiseaseCertificate,
  Employee as PrismaEmployee,
} from "@prisma/client";

export class DiseaseCertificateServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DiseaseCertificateCountArgs, "select">
  ): Promise<number> {
    return this.prisma.diseaseCertificate.count(args);
  }

  async diseaseCertificates(
    args: Prisma.DiseaseCertificateFindManyArgs
  ): Promise<PrismaDiseaseCertificate[]> {
    return this.prisma.diseaseCertificate.findMany(args);
  }
  async diseaseCertificate(
    args: Prisma.DiseaseCertificateFindUniqueArgs
  ): Promise<PrismaDiseaseCertificate | null> {
    return this.prisma.diseaseCertificate.findUnique(args);
  }
  async createDiseaseCertificate(
    args: Prisma.DiseaseCertificateCreateArgs
  ): Promise<PrismaDiseaseCertificate> {
    return this.prisma.diseaseCertificate.create(args);
  }
  async updateDiseaseCertificate(
    args: Prisma.DiseaseCertificateUpdateArgs
  ): Promise<PrismaDiseaseCertificate> {
    return this.prisma.diseaseCertificate.update(args);
  }
  async deleteDiseaseCertificate(
    args: Prisma.DiseaseCertificateDeleteArgs
  ): Promise<PrismaDiseaseCertificate> {
    return this.prisma.diseaseCertificate.delete(args);
  }

  async getEmployee(parentId: string): Promise<PrismaEmployee | null> {
    return this.prisma.diseaseCertificate
      .findUnique({
        where: { id: parentId },
      })
      .employee();
  }
}
